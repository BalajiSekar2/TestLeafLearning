<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="154185" started-at="2022-03-29T23:11:56 IST" finished-at="2022-03-29T23:14:31 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="154185" started-at="2022-03-29T23:11:56 IST" finished-at="2022-03-29T23:14:31 IST">
      <class name="week6.practice.RunTest">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:week6.practice.RunTest@fe18270]" name="setUpClass" is-config="true" duration-ms="2308" started-at="2022-03-29T23:11:56 IST" finished-at="2022-03-29T23:11:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3344d163]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="7773" started-at="2022-03-29T23:11:59 IST" finished-at="2022-03-29T23:12:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="22051" started-at="2022-03-29T23:12:07 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:12:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create Contact Positive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Contact]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="301" started-at="2022-03-29T23:12:29 IST" finished-at="2022-03-29T23:12:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="3459" started-at="2022-03-29T23:12:29 IST" finished-at="2022-03-29T23:12:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="14972" started-at="2022-03-29T23:12:32 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:12:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create Lead Postive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="216" started-at="2022-03-29T23:12:47 IST" finished-at="2022-03-29T23:12:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="3763" started-at="2022-03-29T23:12:48 IST" finished-at="2022-03-29T23:12:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="9158" started-at="2022-03-29T23:12:51 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:13:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create Lead Postive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Lead]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Enter the LastName as 'L''' is undefined.
You can implement this step using the snippet(s) below:

@Given("Enter the LastName as {string}'")
public void enter_the_last_name_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Enter the LastName as 'L''' is undefined.
You can implement this step using the snippet(s) below:

@Given("Enter the LastName as {string}'")
public void enter_the_last_name_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="196" started-at="2022-03-29T23:13:01 IST" finished-at="2022-03-29T23:13:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="3048" started-at="2022-03-29T23:13:01 IST" finished-at="2022-03-29T23:13:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="22778" started-at="2022-03-29T23:13:04 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:13:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete Lead Positive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="221" started-at="2022-03-29T23:13:27 IST" finished-at="2022-03-29T23:13:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="3050" started-at="2022-03-29T23:13:27 IST" finished-at="2022-03-29T23:13:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="21593" started-at="2022-03-29T23:13:30 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:13:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Duplicate Lead Positive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Duplicate Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="237" started-at="2022-03-29T23:13:51 IST" finished-at="2022-03-29T23:13:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="3382" started-at="2022-03-29T23:13:52 IST" finished-at="2022-03-29T23:13:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="19379" started-at="2022-03-29T23:13:55 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:14:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Edit Lead Positive Flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Edit Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="176" started-at="2022-03-29T23:14:14 IST" finished-at="2022-03-29T23:14:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="2971" started-at="2022-03-29T23:14:15 IST" finished-at="2022-03-29T23:14:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="949" started-at="2022-03-29T23:14:18 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:14:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["LeafTaps Login Mutiple data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="136" started-at="2022-03-29T23:14:19 IST" finished-at="2022-03-29T23:14:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="2860" started-at="2022-03-29T23:14:19 IST" finished-at="2022-03-29T23:14:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="854" started-at="2022-03-29T23:14:22 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:14:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["LeafTaps Login Positive flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="106" started-at="2022-03-29T23:14:22 IST" finished-at="2022-03-29T23:14:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="initializeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="initializeBrowser" is-config="true" duration-ms="2963" started-at="2022-03-29T23:14:23 IST" finished-at="2022-03-29T23:14:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:week6.practice.RunTest@fe18270]" name="runScenario" duration-ms="778" started-at="2022-03-29T23:14:26 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-29T23:14:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["LeafTaps Login Negative flow"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Lead]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:week6.practice.RunTest@fe18270]" name="closeBrowser" is-config="true" duration-ms="2091" started-at="2022-03-29T23:14:26 IST" finished-at="2022-03-29T23:14:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:week6.practice.RunTest@fe18270]" name="tearDownClass" is-config="true" duration-ms="2210" started-at="2022-03-29T23:14:28 IST" finished-at="2022-03-29T23:14:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- week6.practice.RunTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
